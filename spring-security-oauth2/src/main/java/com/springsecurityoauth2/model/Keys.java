/*
 * This file is generated by jOOQ.
 */
package com.springsecurityoauth2.model;


import com.springsecurityoauth2.model.tables.OauthAccessToken;
import com.springsecurityoauth2.model.tables.OauthClientDetails;
import com.springsecurityoauth2.model.tables.OauthClientToken;
import com.springsecurityoauth2.model.tables.Permission;
import com.springsecurityoauth2.model.tables.Role;
import com.springsecurityoauth2.model.tables.RolePermission;
import com.springsecurityoauth2.model.tables.User;
import com.springsecurityoauth2.model.tables.UserRole;
import com.springsecurityoauth2.model.tables.records.OauthAccessTokenRecord;
import com.springsecurityoauth2.model.tables.records.OauthClientDetailsRecord;
import com.springsecurityoauth2.model.tables.records.OauthClientTokenRecord;
import com.springsecurityoauth2.model.tables.records.PermissionRecord;
import com.springsecurityoauth2.model.tables.records.RolePermissionRecord;
import com.springsecurityoauth2.model.tables.records.RoleRecord;
import com.springsecurityoauth2.model.tables.records.UserRecord;
import com.springsecurityoauth2.model.tables.records.UserRoleRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<PermissionRecord, Integer> IDENTITY_PERMISSION = Identities0.IDENTITY_PERMISSION;
    public static final Identity<RoleRecord, Integer> IDENTITY_ROLE = Identities0.IDENTITY_ROLE;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<OauthAccessTokenRecord> OAUTH_ACCESS_TOKEN_PKEY = UniqueKeys0.OAUTH_ACCESS_TOKEN_PKEY;
    public static final UniqueKey<OauthClientDetailsRecord> OAUTH_CLIENT_DETAILS_PKEY = UniqueKeys0.OAUTH_CLIENT_DETAILS_PKEY;
    public static final UniqueKey<OauthClientTokenRecord> OAUTH_CLIENT_TOKEN_PKEY = UniqueKeys0.OAUTH_CLIENT_TOKEN_PKEY;
    public static final UniqueKey<PermissionRecord> PERMISSION_PKEY = UniqueKeys0.PERMISSION_PKEY;
    public static final UniqueKey<PermissionRecord> PERMISSION_NAME_UN = UniqueKeys0.PERMISSION_NAME_UN;
    public static final UniqueKey<RoleRecord> ROLE_PKEY = UniqueKeys0.ROLE_PKEY;
    public static final UniqueKey<RoleRecord> NAME_UN = UniqueKeys0.NAME_UN;
    public static final UniqueKey<RolePermissionRecord> ROLE_PERMISSION_PKEY = UniqueKeys0.ROLE_PERMISSION_PKEY;
    public static final UniqueKey<UserRecord> USER_PKEY = UniqueKeys0.USER_PKEY;
    public static final UniqueKey<UserRecord> USER_EMAIL_NAME_UN = UniqueKeys0.USER_EMAIL_NAME_UN;
    public static final UniqueKey<UserRoleRecord> USER_ROLE_PKEY = UniqueKeys0.USER_ROLE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<RolePermissionRecord, RoleRecord> ROLE_PERMISSION__ROLE_ID_FK = ForeignKeys0.ROLE_PERMISSION__ROLE_ID_FK;
    public static final ForeignKey<RolePermissionRecord, PermissionRecord> ROLE_PERMISSION__PERMISSION_ID_FK = ForeignKeys0.ROLE_PERMISSION__PERMISSION_ID_FK;
    public static final ForeignKey<UserRoleRecord, RoleRecord> USER_ROLE__ROLE_ID_FK = ForeignKeys0.USER_ROLE__ROLE_ID_FK;
    public static final ForeignKey<UserRoleRecord, UserRecord> USER_ROLE__USER_ID_FK = ForeignKeys0.USER_ROLE__USER_ID_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<PermissionRecord, Integer> IDENTITY_PERMISSION = Internal.createIdentity(Permission.PERMISSION, Permission.PERMISSION.ID);
        public static Identity<RoleRecord, Integer> IDENTITY_ROLE = Internal.createIdentity(Role.ROLE, Role.ROLE.ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<OauthAccessTokenRecord> OAUTH_ACCESS_TOKEN_PKEY = Internal.createUniqueKey(OauthAccessToken.OAUTH_ACCESS_TOKEN, "oauth_access_token_pkey", OauthAccessToken.OAUTH_ACCESS_TOKEN.AUTHENTICATION_ID);
        public static final UniqueKey<OauthClientDetailsRecord> OAUTH_CLIENT_DETAILS_PKEY = Internal.createUniqueKey(OauthClientDetails.OAUTH_CLIENT_DETAILS, "oauth_client_details_pkey", OauthClientDetails.OAUTH_CLIENT_DETAILS.CLIENT_ID);
        public static final UniqueKey<OauthClientTokenRecord> OAUTH_CLIENT_TOKEN_PKEY = Internal.createUniqueKey(OauthClientToken.OAUTH_CLIENT_TOKEN, "oauth_client_token_pkey", OauthClientToken.OAUTH_CLIENT_TOKEN.AUTHENTICATION_ID);
        public static final UniqueKey<PermissionRecord> PERMISSION_PKEY = Internal.createUniqueKey(Permission.PERMISSION, "permission_pkey", Permission.PERMISSION.ID);
        public static final UniqueKey<PermissionRecord> PERMISSION_NAME_UN = Internal.createUniqueKey(Permission.PERMISSION, "permission_name_un", Permission.PERMISSION.NAME);
        public static final UniqueKey<RoleRecord> ROLE_PKEY = Internal.createUniqueKey(Role.ROLE, "role_pkey", Role.ROLE.ID);
        public static final UniqueKey<RoleRecord> NAME_UN = Internal.createUniqueKey(Role.ROLE, "name_un", Role.ROLE.NAME);
        public static final UniqueKey<RolePermissionRecord> ROLE_PERMISSION_PKEY = Internal.createUniqueKey(RolePermission.ROLE_PERMISSION, "role_permission_pkey", RolePermission.ROLE_PERMISSION.ROLE_ID, RolePermission.ROLE_PERMISSION.PERMISSION_ID);
        public static final UniqueKey<UserRecord> USER_PKEY = Internal.createUniqueKey(User.USER, "user_pkey", User.USER.ID);
        public static final UniqueKey<UserRecord> USER_EMAIL_NAME_UN = Internal.createUniqueKey(User.USER, "user_email_name_un", User.USER.USER_NAME, User.USER.EMAIL);
        public static final UniqueKey<UserRoleRecord> USER_ROLE_PKEY = Internal.createUniqueKey(UserRole.USER_ROLE, "user_role_pkey", UserRole.USER_ROLE.USER_ID, UserRole.USER_ROLE.ROLE_ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<RolePermissionRecord, RoleRecord> ROLE_PERMISSION__ROLE_ID_FK = Internal.createForeignKey(com.springsecurityoauth2.model.Keys.ROLE_PKEY, RolePermission.ROLE_PERMISSION, "role_permission__role_id_fk", RolePermission.ROLE_PERMISSION.ROLE_ID);
        public static final ForeignKey<RolePermissionRecord, PermissionRecord> ROLE_PERMISSION__PERMISSION_ID_FK = Internal.createForeignKey(com.springsecurityoauth2.model.Keys.PERMISSION_PKEY, RolePermission.ROLE_PERMISSION, "role_permission__permission_id_fk", RolePermission.ROLE_PERMISSION.PERMISSION_ID);
        public static final ForeignKey<UserRoleRecord, RoleRecord> USER_ROLE__ROLE_ID_FK = Internal.createForeignKey(com.springsecurityoauth2.model.Keys.ROLE_PKEY, UserRole.USER_ROLE, "user_role__role_id_fk", UserRole.USER_ROLE.USER_ID);
        public static final ForeignKey<UserRoleRecord, UserRecord> USER_ROLE__USER_ID_FK = Internal.createForeignKey(com.springsecurityoauth2.model.Keys.USER_PKEY, UserRole.USER_ROLE, "user_role__user_id_fk", UserRole.USER_ROLE.USER_ID);
    }
}
