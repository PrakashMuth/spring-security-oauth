/*
 * This file is generated by jOOQ.
 */
package com.springsecurityoauth2.model;


import com.springsecurityoauth2.model.tables.OauthAccessToken;
import com.springsecurityoauth2.model.tables.OauthApprovals;
import com.springsecurityoauth2.model.tables.OauthClientDetails;
import com.springsecurityoauth2.model.tables.OauthClientToken;
import com.springsecurityoauth2.model.tables.OauthCode;
import com.springsecurityoauth2.model.tables.OauthRefreshToken;
import com.springsecurityoauth2.model.tables.Permission;
import com.springsecurityoauth2.model.tables.Role;
import com.springsecurityoauth2.model.tables.RolePermission;
import com.springsecurityoauth2.model.tables.User;
import com.springsecurityoauth2.model.tables.UserRole;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 802873442;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.oauth_access_token</code>.
     */
    public final OauthAccessToken OAUTH_ACCESS_TOKEN = com.springsecurityoauth2.model.tables.OauthAccessToken.OAUTH_ACCESS_TOKEN;

    /**
     * The table <code>public.oauth_approvals</code>.
     */
    public final OauthApprovals OAUTH_APPROVALS = com.springsecurityoauth2.model.tables.OauthApprovals.OAUTH_APPROVALS;

    /**
     * The table <code>public.oauth_client_details</code>.
     */
    public final OauthClientDetails OAUTH_CLIENT_DETAILS = com.springsecurityoauth2.model.tables.OauthClientDetails.OAUTH_CLIENT_DETAILS;

    /**
     * The table <code>public.oauth_client_token</code>.
     */
    public final OauthClientToken OAUTH_CLIENT_TOKEN = com.springsecurityoauth2.model.tables.OauthClientToken.OAUTH_CLIENT_TOKEN;

    /**
     * The table <code>public.oauth_code</code>.
     */
    public final OauthCode OAUTH_CODE = com.springsecurityoauth2.model.tables.OauthCode.OAUTH_CODE;

    /**
     * The table <code>public.oauth_refresh_token</code>.
     */
    public final OauthRefreshToken OAUTH_REFRESH_TOKEN = com.springsecurityoauth2.model.tables.OauthRefreshToken.OAUTH_REFRESH_TOKEN;

    /**
     * The table <code>public.permission</code>.
     */
    public final Permission PERMISSION = com.springsecurityoauth2.model.tables.Permission.PERMISSION;

    /**
     * The table <code>public.role</code>.
     */
    public final Role ROLE = com.springsecurityoauth2.model.tables.Role.ROLE;

    /**
     * The table <code>public.role_permission</code>.
     */
    public final RolePermission ROLE_PERMISSION = com.springsecurityoauth2.model.tables.RolePermission.ROLE_PERMISSION;

    /**
     * The table <code>public.user</code>.
     */
    public final User USER = com.springsecurityoauth2.model.tables.User.USER;

    /**
     * The table <code>public.user_role</code>.
     */
    public final UserRole USER_ROLE = com.springsecurityoauth2.model.tables.UserRole.USER_ROLE;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.PERMISSION_ID_SEQ,
            Sequences.ROLE_ID_SEQ,
            Sequences.USER_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            OauthAccessToken.OAUTH_ACCESS_TOKEN,
            OauthApprovals.OAUTH_APPROVALS,
            OauthClientDetails.OAUTH_CLIENT_DETAILS,
            OauthClientToken.OAUTH_CLIENT_TOKEN,
            OauthCode.OAUTH_CODE,
            OauthRefreshToken.OAUTH_REFRESH_TOKEN,
            Permission.PERMISSION,
            Role.ROLE,
            RolePermission.ROLE_PERMISSION,
            User.USER,
            UserRole.USER_ROLE);
    }
}
